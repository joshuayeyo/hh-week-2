// Î∞òÎ≥µ ÏùºÏ†ï ÏïÑÏù¥ÏΩò Ïª¥Ìè¨ÎÑåÌä∏ ÌÖåÏä§Ìä∏
import { render, screen } from '@testing-library/react';
import { describe, it, expect } from 'vitest';

import { RecurringEventIcon } from '@/components/RecurringEventIcon';
import { RepeatInfoProps } from '@/types/events/RepeatInfo.types';

describe('RecurringEventIcon Ïª¥Ìè¨ÎÑåÌä∏', () => {
  it('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ïÏóê ÎåÄÌï¥ Ïò¨Î∞îÎ•∏ ÏïÑÏù¥ÏΩòÏùÑ Î†åÎçîÎßÅÌï¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'daily',
      interval: 1,
    };

    render(<RecurringEventIcon repeatInfo={repeatInfo} />);

    expect(screen.getByText('üìÖ')).toBeInTheDocument();
    expect(screen.getByLabelText('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï')).toBeInTheDocument();
  });

  it('Îß§Ï£º Î∞òÎ≥µ ÏùºÏ†ïÏóê ÎåÄÌï¥ Ïò¨Î∞îÎ•∏ ÏïÑÏù¥ÏΩòÏùÑ Î†åÎçîÎßÅÌï¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'weekly',
      interval: 2,
    };

    render(<RecurringEventIcon repeatInfo={repeatInfo} />);

    expect(screen.getByText('üìÜ')).toBeInTheDocument();
    expect(screen.getByLabelText('2Ï£ºÎßàÎã§ Î∞òÎ≥µ ÏùºÏ†ï')).toBeInTheDocument();
  });

  it('Îß§Ïõî Î∞òÎ≥µ ÏùºÏ†ïÏóê ÎåÄÌï¥ Ïò¨Î∞îÎ•∏ ÏïÑÏù¥ÏΩòÏùÑ Î†åÎçîÎßÅÌï¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'monthly',
      interval: 1,
    };

    render(<RecurringEventIcon repeatInfo={repeatInfo} />);

    expect(screen.getByText('üóìÔ∏è')).toBeInTheDocument();
    expect(screen.getByLabelText('Îß§Ïõî Î∞òÎ≥µ ÏùºÏ†ï')).toBeInTheDocument();
  });

  it('Îß§ÎÖÑ Î∞òÎ≥µ ÏùºÏ†ïÏóê ÎåÄÌï¥ Ïò¨Î∞îÎ•∏ ÏïÑÏù¥ÏΩòÏùÑ Î†åÎçîÎßÅÌï¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'yearly',
      interval: 1,
    };

    render(<RecurringEventIcon repeatInfo={repeatInfo} />);

    expect(screen.getByText('üìù')).toBeInTheDocument();
    expect(screen.getByLabelText('Îß§ÎÖÑ Î∞òÎ≥µ ÏùºÏ†ï')).toBeInTheDocument();
  });

  it('Î∞òÎ≥µ Ï†ïÎ≥¥Í∞Ä ÏóÜÏúºÎ©¥ ÏïÑÎ¨¥Í≤ÉÎèÑ Î†åÎçîÎßÅÌïòÏßÄ ÏïäÏïÑÏïº Ìï®', () => {
    const { container } = render(<RecurringEventIcon repeatInfo={null} />);

    expect(container.firstChild).toBeNull();
  });

  it('none ÌÉÄÏûÖ Î∞òÎ≥µ Ï†ïÎ≥¥Ïóê ÎåÄÌï¥ ÏïÑÎ¨¥Í≤ÉÎèÑ Î†åÎçîÎßÅÌïòÏßÄ ÏïäÏïÑÏïº Ìï®', () => {
    const noneRepeat: RepeatInfoProps = {
      type: 'none',
      interval: 1,
    };

    const { container } = render(
      <RecurringEventIcon repeatInfo={noneRepeat} />
    );

    expect(container.firstChild).toBeNull();
  });

  it('Ïª§Ïä§ÌÖÄ ÌÅ¨Í∏∞Í∞Ä Ï†ÅÏö©ÎêòÏñ¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'daily',
      interval: 1,
    };

    render(
      <RecurringEventIcon
        repeatInfo={repeatInfo}
        size="24px"
      />
    );

    const icon = screen.getByLabelText('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï');
    expect(icon).toHaveStyle({ fontSize: '24px' });
  });

  it('Ïª§Ïä§ÌÖÄ ÏÉâÏÉÅÏù¥ Ï†ÅÏö©ÎêòÏñ¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'daily',
      interval: 1,
    };

    render(
      <RecurringEventIcon
        repeatInfo={repeatInfo}
        color="#ff0000"
      />
    );

    const icon = screen.getByLabelText('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï');
    expect(icon).toHaveStyle({ color: '#ff0000' });
  });

  it('disabled ÏÉÅÌÉúÍ∞Ä Ï†ÅÏö©ÎêòÏñ¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'daily',
      interval: 1,
    };

    render(
      <RecurringEventIcon
        repeatInfo={repeatInfo}
        disabled
      />
    );

    const icon = screen.getByLabelText('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï');
    expect(icon).toHaveStyle({ opacity: '0.5' });
  });

  it('hover ÏÉÅÌÉúÏóêÏÑú Ìà¥ÌåÅÏù¥ ÌëúÏãúÎêòÏñ¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'daily',
      interval: 1,
    };

    render(
      <RecurringEventIcon
        repeatInfo={repeatInfo}
        showTooltip
      />
    );

    const icon = screen.getByLabelText('Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï');
    expect(icon).toHaveAttribute('title', 'Îß§Ïùº Î∞òÎ≥µ ÏùºÏ†ï');
  });

  it('Ï†ëÍ∑ºÏÑ± ÏÜçÏÑ±Ïù¥ Ïò¨Î∞îÎ•¥Í≤å ÏÑ§Ï†ïÎêòÏñ¥Ïïº Ìï®', () => {
    const repeatInfo: RepeatInfoProps = {
      type: 'weekly',
      interval: 1,
    };

    render(<RecurringEventIcon repeatInfo={repeatInfo} />);

    const icon = screen.getByLabelText('Îß§Ï£º Î∞òÎ≥µ ÏùºÏ†ï');
    expect(icon).toHaveAttribute('role', 'img');
    expect(icon).toHaveAttribute('aria-label', 'Îß§Ï£º Î∞òÎ≥µ ÏùºÏ†ï');
  });
});
